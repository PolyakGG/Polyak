package main

import (
	"fmt"
	"regexp"
)

func main() {
	re := regexp.MustCompile("^[0-9A-Za-z]+$") // Данное регулярное выражение будет соответствовать строкам, которые состоят только из арабских цифр  
													//и букв латинского алфавита верхнего и нижнего регистров.
	
	Символ "^" обозначает начало строки, символ "$" - конец строки, а "+" - одно или более вхождений предшествующего символа или группы символов. 
	var password string
	fmt.Scan(&password)                                 // Считываем пароль
	if len(password) >= 5 && re.MatchString(password) { // Если длина пароля больше или равна пяти
		fmt.Print("Ok")
	} else {
		fmt.Print("Wrong password")
	}
}

// Начнём с простого. Функция len в строке кода 12 вернёт нам длину строки (password) в байтах.
//Т.е. не количество символов (рун), а именно количество байт, которые хранят в себе содержимое строки password.
//Напоминаю, под собой строка содержит срез байтов. Подробнее об этом можно почитать здесь <<<

//Если кратко, то символ - это какой либо символ, в т.ч. смайлик или иероглиф из таблицы символов Unicode, или, например, символ точки или буква N из таблицы символов ASCII - которая также входит в состав таблицы Unicode.
//Руна - это целое число, которое соответствует коду символа в таблице Unicode. Руна может занимать от 1 до 4 байт.
//Соответственно, пароль состоящий из пяти символов Unicode может требовать для хранения от 5 до 20 байт.
//Конкретно для заданных условий, функции len будет достаточно, т.к.
//мы проверяем по сути наличие в получаемом на входе пароле наличие только символов, входящих в ASCII-таблицу.
// А они в свою очередь требуют 1 байт для хранения каждый. Поэтому мы просто проверяем длину пароля более 5 байт.
